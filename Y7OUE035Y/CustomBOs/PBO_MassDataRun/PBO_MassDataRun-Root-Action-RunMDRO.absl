/*
	Add your SAP Business ByDesign scripting language implementation for:
		Business Object: PBO_MassDataRun
		Node: Root
		Action: RunMDRO 
		
	Note: 
	  - To access the elements of the business object node, 
	    use path expressions, for example, this.<element name>. 
	  - To use code completion, press CTRL+J. 
	  - This script file is mass-enabled, i.e. the keyword "this" 
	    refers to a collection of node instances.
	   
*/

import ABSL;
import AP.PlatinumEngineering;

var MDRO_ID : XPEString;
var MDROReuse :XPEStringTab;
var QueryParam : QueryParameter;
var ParameterName : QueryParameter.ParameterName;
var mdrAddParameterResult;
var mdrCreateInstanceResult;
var MDRName;
var MDRNamespace;
var MessageList : MessageList;

foreach(var inst in this)
{
	var qryPBODataUpload = PBO_DataUpload.QueryByElements;
	var paramDataUpload = qryPBODataUpload.CreateSelectionParams();
	
	if(!inst.DataUploadISPID.IsInitial())
	{
		paramDataUpload.Add(qryPBODataUpload.ProcessingStatus,"I","EQ","O");
		paramDataUpload.Add(qryPBODataUpload.ISPID,"I","EQ",inst.DataUploadISPID);
	}
	else
	{
		paramDataUpload.Add(qryPBODataUpload.ProcessingStatus,"I","EQ","O");
	}
	var resultDataUpload = qryPBODataUpload.Execute(paramDataUpload);
	foreach(var filerecords in resultDataUpload) //Create New Run for each File Instance Record
	{
		if(!filerecords.RecordID.IsInitial())
		{
			MDRName				= "PBO_DataUpload_Run";		
			MDRO_ID				= "AUTOMATIC RUN_" + filerecords.ISPID + "_" + filerecords.RecordID.RemoveLeadingZeros(); 
			if (Context.GetSystemURL().ToLowerCase().Contains("my327660"))		//Dev system
			{
				MDRNamespace		= "http://0003581030-one-off.sap.com/Y7OUE035Y_";
			}
			else 
			{
				MDRNamespace		= "http://0003581030-one-off.sap.com/YIYGHG1TY_"; //other than dev
			}
		
			
			mdrCreateInstanceResult		= MDRO.CreateInstance(MDRName, MDRNamespace, MDRO_ID);
			MessageList					= MDRO.Activate(MDRName,MDRNamespace,MDRO_ID);
		
			QueryParam.ParameterName	= "SelectByRecordID"; 
			QueryParam.Sign				= "I";
			QueryParam.Option			= "EQ";
			QueryParam.Low				= filerecords.RecordID.RemoveLeadingZeros();

			mdrAddParameterResult = MDRO.AddSelectionParameter(MDRName,MDRNamespace,"SelectByRecordID",MDRO_ID,QueryParam);
			MessageList = MDRO.Activate(MDRName,MDRNamespace,MDRO_ID);

			var currentTime			= Context.GetCurrentGlobalDateTime();
			var StartDuration		= Library::Duration.Create (0, 0, 0, 0, 0, 2); // 2 sec delay
			var startTime			= currentTime.AddDuration ( StartDuration );


			//MessageList	= MDRO.Activate(MDRName,MDRNamespace,MDRO_ID);
			MessageList		= MDRO.ExecuteDateTime(MDRName,MDRNamespace, startTime, MDRO_ID);
		
			if(!MessageList.IsInitial())
			{
				foreach(var logs in MessageList.MessageTypeItem)
				{
					if(logs.MessageSeverityText == "E")
					{
						var DataUploadInstance = PBO_DataUpload.QueryByElements;
						var param = DataUploadInstance.CreateSelectionParams();
						param.Add(DataUploadInstance.RecordID,"I","EQ",filerecords.RecordID);
						var result = DataUploadInstance.Execute(param);
						if(result.Count() == 1)
						{
							result.GetFirst().ProcessingStatus = "F";

							var processLogs : elementsof PBO_DataUpload.ProcessLog;
							//processLogs.LogDescriptions				= logs.Text.content;
							processLogs.TimeStamp						= Context.GetCurrentGlobalDateTime();
							processLogs.Trans_ObjectType.content		= "39";

							result.GetFirst().ProcessLog.Create(processLogs);
						}
					}
				}
			}
			//MDRO.DeleteSelectionParameter(MDRName,MDRNamespace,"SelectByUniqueID",MDRO_ID);
			//MessageList = MDRO.Activate(MDRName,MDRNamespace,MDRO_ID);
		}
	}
}

